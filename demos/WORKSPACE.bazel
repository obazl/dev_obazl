workspace( name = "demos" )

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

http_archive(
    name = "bazel_skylib",
    urls = [
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
    ],
    sha256 = "c6966ec828da198c5d9adbaa94c05e3a1c7f21bd012a0b29ba8ddbccb2c93b0d",
)

################################################################
git_repository(
    name = "rules_ocaml",
    remote = "https://github.com/obazl/rules_ocaml",
    branch = "obazl3",
)

# load("@rules_ocaml//:WORKSPACE.bzl", "ocaml_configure")
# ocaml_configure()

## must be run after ocaml_configure
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

git_repository(
    name = "obazl_tools_obazl",
    remote = "https://github.com/obazl/tools_obazl",
    branch = "dev",
)

git_repository(
    name = "opam",
    remote = "https://github.com/obazl/tools_opam", # FIXME
    branch = "obazl2",
)
load("@opam//:WORKSPACE.bzl", "opam_fetch_repos")
opam_fetch_repos()

     # "opam_configure")
# opam_configure()

## @opam commands need rules_foreign_cc:
load("@rules_foreign_cc//foreign_cc:repositories.bzl",
     "rules_foreign_cc_dependencies")

rules_foreign_cc_dependencies(
    # register_preinstalled_tools = False
    # register_built_tools=False
)

load("//:COSWITCH.bzl", register_coswitch = "register")
register_coswitch()

load("@coswitch//:BOOTSTRAP.bzl", "bootstrap")
bootstrap()
