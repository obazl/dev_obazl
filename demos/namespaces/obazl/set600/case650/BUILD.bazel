
## NOT YET UPDATED to latest

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_library",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "_Test"
)

ocaml_module(
    name   = "_Test",
    struct = "test.ml",
    opts = ["-w", "-27"], ## Error (warning 27): unused variable test_ctxt.
    deps = [":#a", "@opam//lib/ounit2"],
)

# How to support articulated module paths like A.B.Color
ocaml_ns_library(
    name = "#a",
    # include = "a_footer.ml",
    submodules = [
        # ":foo", ## 'regular' submodule
        ":#b",  ## ns submodule
    ],
)

ocaml_ns_library(
    name = "#b",
    # includes = [":beta"],
    submodules = [
        ":_Bar", # : "Bar",  ## 'regular' submodule
        ":#color" #: "Color",  ## ns submodule
    ],
)

## This module will be accessible directly as 'Color', or indirectly as 'A.Color'
## But since it has private visibility by default, clients outside of this package
## cannot depend on it directly.
ocaml_ns_library(
    name = "#color",
    # includes = [":color_include"],
    submodules = [
        ":_Red", #: "Red",
        ":_Green", #: "Green",
        ":_Blue" #: "Blue",
    ],
)

ocaml_module(
    name = "beta",
    struct = "beta.ml",
)

ocaml_module(
    name = "color_include",
    struct = "color_include.ml",
)

ocaml_module(
    name = "_Red",
    struct = "red.ml",
)

ocaml_module(
    name = "_Green",
    struct = "green.ml",
)

ocaml_module(
    name = "_Blue",
    struct = "blue.ml",
)

ocaml_module(
    name = "_Bar",
    struct = "bar.ml",
)
