# set050/case10

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_test",
)

# In this case, we need ns, since our ns contains a local submodule.
load("@obazl_rules_ocaml//ocaml:macros.bzl", "ns_env")

ns_env()

ocaml_test(
    name = "test",
    deps_opam = ["ounit2"],
    main = "test.ml",
    opts = [
        "-w",
        "-27",
    ],  ## Error (warning 27): unused variable test_ctxt.
    deps = [":color"],
)

ocaml_ns_library(
    name = "color",
    main = "color.ml",
    submodules = {
        ## won't work? because these are (renamed) submodules,
        ## we don't inherit the resolvers for the enrollment ns_envs.
        ## so we get: "Error: The module Color.Red is an alias for module Red, which is missing"
        "//namespaces/obazl/set100/case120:_Red": "Red",
        "//namespaces/obazl/set100/case120:_Green": "Green",
        "//namespaces/obazl/set100/case130:_Blue": "Blue",
        ":_Grue": "Grue",
    },
)

ocaml_module(
    name = "_Grue",
    ns_env = ":_ns_env",
    struct = "grue.ml",
)
