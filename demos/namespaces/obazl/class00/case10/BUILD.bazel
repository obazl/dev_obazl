load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_library",
    "ocaml_module",
    "ocaml_test",
)

load("@obazl_rules_ocaml//ocaml:macros.bzl", "ns_env")

# In this example, module green.ml depends on blue.ml. This will work,
# so long as the depenency is explicitly listed on the _Green target below.

ocaml_test(
    name = "test",
    main = "test.ml",
    opts = [
        "-w",
        "-27",
    ],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        ":_Red",
        ":_Green",
        ":_Blue",
        "@opam//pkg:ounit2",
    ],
)

ocaml_module(
    name = "_Red",
    struct = "red.ml",
)

ocaml_module(
    name = "_Green",
    struct = "green.ml",
    ## without a dependency on :_Blue, building the 'test' target will
    ## fail with 'Unbound module Blue', since this module calls into Blue.
    deps   = [":_Blue"]
)

ocaml_module(
    name = "_Blue",
    struct = "blue.ml",
)
