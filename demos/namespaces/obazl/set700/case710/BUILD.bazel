## currently broken

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "_Test"
)

ocaml_module(
    name   = "_Test",
    struct = "test.ml",
    opts = [
        "-w",
        "-27",
    ],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        ":#color",
        ":#couleur",
        "@opam//lib/ounit2"
    ],
)

ocaml_ns_library(
    name = "#color",
    submodules = [
        # OBazl will put these in depencency order. E.g. Red depends on
        # Blue, Green and Subred, and Green depends on Blue, so the order on the
        # command line will be Blue, Green, Subred, Red, Color.
        # To see this without building, run:
        # $ bazel aquery namespaces/obazl/class04/case13:test
        ":_Red",
        ":_Green",
        ":_Blue"
        # ":_CMY"  # include an ns module as a submodule
    ],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "_Red",
    struct = "red.ml",
    deps = [
        ":_Blue",
        ":_Green",
        ":_Subred",
    ],
)

ocaml_module(
    name = "_Subred",
    struct = "subred.ml",
)

ocaml_module(
    name = "_Green",
    struct = "green.ml",
    deps = [":_Blue"],
)

ocaml_module(
    name = "_Blue",
    struct = "blue.ml",
)

################################################################
## Build a different nslib that uses the same submodules.

ocaml_ns_library(
    name = "#couleur",
    submodules = [
        ## user-defined main module maps different names to same modules
        ":_Couleur"
    ],
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "_Couleur",
    struct = "couleur.ml",
    deps   = [
        ":_Red",
        ":_Green",
        ":_Blue"
    ]
)
