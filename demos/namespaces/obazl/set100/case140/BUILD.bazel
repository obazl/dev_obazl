## set100/case140

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_test",
)
load("@obazl_rules_ocaml//ocaml:macros.bzl", "ns_env")

ns_env(prefix = "demo")

ocaml_test(
    name = "test",
    deps_opam = ["ounit2"],
    main = "test.ml",
    opts = [
        "-w",
        "-27",
    ],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        ":_Blue",
        ":_FooGreen",  # see below - target names are arbitrary
        ":_Red",
    ],
)

ocaml_module(
    name = "_Red",
    ns_env = ":_ns_env",
    struct = "red.ml",
    # Red calls Green (using the prefix!), so the dep must be explicitly listed.
    # But notice that the dependency target label has no connection with the actual
    # module name. Red calls module Demo__Green, but it depends on build target :_DemoGreen.
    deps = [":_FooGreen"],
)

ocaml_module(
    name = "_FooGreen",  # We can use any legal Bazel name to name our build targets.
    ns_env = ":_ns_env",
    struct = "green.ml",  # name of the output is determined by source file name plus prefix from ns_env.
    deps = [":_Blue"],
)

ocaml_module(
    name = "_Blue",
    ns_env = ":_ns_env",
    struct = "blue.ml",
    visibility = ["//visibility:public"],
)
