# Demonstrates binding variant structures and signatures.

# lang defaults to English; to select French, pass:
#     --//bzl:lang=fr

load(
    "@rules_ocaml//build:rules.bzl",
    "ocaml_module",
    "ocaml_signature",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "Test"
)

ocaml_module(
    name   = "Test",
    struct = select({
        ":linux_en": "test_linux_en.ml",
        ":linux_fr": "test_linux_fr.ml",
        ":macos_en": "test_macos_en.ml",
        ":macos_fr": "test_macos_fr.ml",
    }),
    opts = ["-w", "-27"],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        ":_Hello",
        "@ounit2//:ounit2"
    ],
)

ocaml_signature(
    name = "Hello",
    forcename = True,
    src  = select({
        ":lang_en": "hello_en.mli",
        ":lang_fr": "hello_fr.mli",
    }, no_match_error = "unsupported sig"),
)

## module name will be derived rom sig name
ocaml_module(
    name   = "_Hello",
    sig    = ":Hello",
    # sig    = select({
    #     ":lang_en": "hello_en.mli",
    #     ":lang_fr": "hello_fr.mli",
    # }, no_match_error = "unsupported sig"),

    # local direct file dep:
    # sig    = "hello.mli",

    struct = select({
        ":linux_en": "hello_linux_en.ml",
        ":linux_fr": "hello_linux_fr.ml",

        ":macos_en": "hello_macos_en.ml",
        ":macos_fr": "hello_macos_fr.ml",

    }, no_match_error = "unsupported"),
)

################
config_setting(
    name = "lang_en",
    flag_values = {"//bzl:lang": "en"}
)
config_setting(
    name = "lang_fr",
    flag_values = {"//bzl:lang": "fr"}
)

config_setting(
    name = "linux_en",
    constraint_values = ["@platforms//os:linux"],
    flag_values = {"//bzl:lang": "en"}
)
config_setting(
    name = "linux_fr",
    constraint_values = ["@platforms//os:linux"],
    flag_values = {"//bzl:lang": "fr"}
)
config_setting(
    name = "macos_en",
    constraint_values = ["@platforms//os:macos"],
    flag_values = {"//bzl:lang": "en"}
)
config_setting(
    name = "macos_fr",
    constraint_values = ["@platforms//os:macos"],
    flag_values = {"//bzl:lang": "fr"}
)

