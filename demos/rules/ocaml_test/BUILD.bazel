# run all tests: $ bazel test rules/ocaml_test
# run one test : $ bazel test rules/ocaml_test:hello_alcotest

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_test",
    "ppx_executable",
    "ppx_module"
)

test_suite(
    name = "ocaml_test",
    tests = [
        "hello_alcotest",
        "hello_ounit2"
    ],
)
ocaml_test(
    name = "hello_alcotest",
    main = "test_alcotest.ml",
    deps = [
        "@opam//pkg:alcotest",
        "//rules/ocaml_module:Hello"
    ]
)

ocaml_test(
    name = "hello_ounit2",
    main = "test_ounit2.ml",
    opts = ["-w", "-27"],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        "@opam//pkg:ounit2",
        "//rules/ocaml_module:Hello"
    ]
)

## For ppx_inline_test we need to use the ppx_executable the transform
## the source file, and we need to run
## `Ppx_inline_test_lib.Runtime.exit ()` last.
ocaml_test(
    name = "hello_ppx_test",
    main = "runner.ml", ## contains Ppx_inline_test_lib.Runtime.exit (); obazl puts 'main' last
    deps = [
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:ppx_inline_test.runner.lib",
        ":_Test_ppx_inline"     # the transformed and compiled test code
    ]
)

ocaml_module(
    name = "_Test_ppx_inline",
    src  = "test_ppx_inline.ml",
    ppx  = ":ppx_inline_test",
    ppx_args = [
        "-inline-test-lib",
        "hello",
    ],
    deps = [
        "@opam//pkg:core",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "//rules/ocaml_module:Hello"
    ]
)

# ppx_transform(
#     name = "test_ppx_inline.pp.ml",
#     srcs = ["test_ppx_inline.ml"]
#     ppx  = ":ppx_inline_test"
#     ppx_args = [
#         "-inline-test-lib",
#         "hello",
#     ],
#     deps = [
#         "@opam//pkg:core",
#         "@opam//pkg:ppx_inline_test.runtime-lib",
#     ]
# )

################################################################
ppx_executable(
    name = "ppx_inline_test",
    adjunct_deps = [
        "@opam//pkg:ppx_inline_test.runtime-lib",
    ],
    main = ":Driver",
    opts = [],
    deps = [
        "@opam//pkg:ppx_inline_test",
        # "@opam//pkg:ppxlib",
      ],
)

###########
ppx_module(
    name = "Driver",
    src = ":ppxlib_driver.ml",
    visibility = ["//visibility:public"],
    deps = ["@opam//pkg:ppxlib"],
)

########
genrule(
    name = "gendriver",
    outs = ["ppxlib_driver.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
