# $ bazel test rules/ocaml_archive:test
# $ bazel aquery rules/ocaml_archive:test

# $ bazel run rules/ocaml_archive:hello
# $ bazel aquery rules/ocaml_archive:hello

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_executable",
    "ocaml_module",
    "ocaml_test",
)

ocaml_test(
    name = "test",
    main = "test.ml",
    opts = [
        "-w",
        "-27",
    ],  ## Error (warning 27): unused variable test_ctxt.
    deps = [
        ":main",
        # "//rules/ocaml_archive:_Easy",
        # "//rules/ocaml_archive:_Simple"
        "@ounit2//:ounit2"
    ],
    # deps_opam = ["ounit2"]
)

ocaml_executable(
    name = "hello",
    main = ":main",
    deps = [":main"],
)

# ocaml_executable(
#     name = "hello2",
#     deps = [":main", ":archive"]
# )

# ocaml_executable(
#     name = "hello3",
#     deps = [":archive", ":main"]
# )

# ocaml_executable(
#     name = "hello4",
#     main = ":simple",
#     deps = [":main2", ":easy"]
# )

ocaml_module(
    name = "main",
    struct = "main.ml",
    opts = ["-linkall",
            # "-verbose",
            # "-I",
            # "rules/ocaml_archive/_obazl_",
            # "/Users/gar/bazel/obazl/dev_obazl/demos/bazel-out/darwin-fastbuild/bin/rules/ocaml_archive/_obazl_",
            # "/Users/gar/bazel/obazl/dev_obazl/demos/bazel-out/darwin-fastbuild/bin/rules/ocaml_archive/_obazl_/arch.cma"
            ],
    deps = [
        ":arch",
        "@ocaml//lib/core"
        # ":_Easy",
        # ":_Simple",
    ],
    # deps_opam = ["core"]
)

# ocaml_module(
#     name = "main2",
#     src = "main2.ml",
# )

ocaml_archive(
    name = "arch",
    opts = ["-linkall",],
    modules = [
        ":_Easy",
        ":_Simple",
    ],
)

ocaml_module(
    name = "_Easy",
    struct = "easy.ml",
    opts = ["-linkall"],
)

ocaml_module(
    name = "_Simple",
    struct = "simple.ml",
    opts = ["-linkall"],
)

# ## this target compiles sources to an archive:
# ocaml_archive(
#     name = "archive_ml",
#     message = "Archiving...",
#     srcs = ["easy.ml", "simple.ml"],
#     opts = [ "-verbose" ],
#     visibility = ["//visibility:public"],
# )

# ## this target mixes compilation and archiving:
# ocaml_archive(
#     name = "archive_mix",
#     message = "Archiving...",
#     srcs = ["easy.ml"],
#     opts = [ "-verbose" ],
#     deps = [":simple"],
#     visibility = ["//visibility:public"],
# )
