## aggregators/archives/case120: two simple (independent) archives

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_test",
    "ppx_executable",
    "ppx_archive",
    "ppx_module"
)

ocaml_test(
    name = "test",
    main = "test.ml",
    ppx  = ":ppx.exe",
    ppx_print = "@ppx//print:text",
    opts = ["-w", "-27"],  ## Error (warning 27): unused variable test_ctxt.
    deps_opam = ["ounit2"]
)

###############
ppx_executable(
    name = "ppx.exe",
    main = ":Runner",
    deps = [
        ":_Ppx_color"
        # ":ppx_driver",
        # ":ppx_color_driver",
        # ":ppx_greek_driver"
    ],
    deps_opam = ["ppxlib"]
)

############
ppx_archive(
    name = "_Ppx_aggregated_archives",
    opts = ["-verbose"],
    modules = [
        ":_Ppx_color",
        ":_Ppx_greek",
    ]
)


###########
ppx_module(
    name      = "ppx_driver",
    struct    = "ppx_driver.ml",
    deps      = [":_Ppx_color"], #  ":_Ppx_greek"],
    opts      = ["-w", "-33"]   ## unused open
)

###########
# ppx_module(
#     name      = "ppx_color_driver",
#     struct    = "ppx_color.ml",
#     deps      = [":_Ppx_color"],
#     opts      = ["-w", "-33"]   ## unused open
# )

############
ppx_archive(
    name = "_Ppx_color",
    opts = [
        "-linkall",
        "-verbose",
        "-open", "Ppx_gamma"
    ],
    modules = [
        ":_Ppx_red",
        ":_Ppx_green",
        ":_Ppx_blue",

        # ":_Ppx_alpha",
        # ":_Ppx_beta",
        # ":_Ppx_gamma",
       ":_Ppx_greek_driver",
    ]
)

ppx_module(
    name      = "_Ppx_red",
    struct    = "ppx_red.ml",
    opts = ["-linkall"],
    deps_opam = ["ppxlib"]
)

ppx_module(
    name      = "_Ppx_green",
    struct    = "ppx_green.ml",
    opts = ["-linkall"],
    deps_opam = ["ppxlib"]
)

ppx_module(
    name      = "_Ppx_blue",
    struct    = "ppx_blue.ml",
    opts = ["-linkall"],
    deps_opam = ["ppxlib"]
)

############
ppx_archive(
    name = "_Ppx_greek",
    opts = ["-linkall"],
    modules = [
        ":_Ppx_alpha",
        ":_Ppx_beta",
        ":_Ppx_gamma",
        # ":_Ppx_greek_driver"
    ],
)

###########
ppx_module(
    name      = "_Ppx_greek_driver",
    struct    = "ppx_greek_driver.ml",
    deps = [
        # ":_Ppx_alpha",
        # ":_Ppx_beta",
        # ":_Ppx_gamma",
        ":_Ppx_greek"
    ],
    opts = [
        "-w", "-33", ## unused open
        "-linkall"
    ]
)

ppx_module(
    name      = "_Ppx_alpha",
    opts = ["-linkall"],
    struct    = "ppx_alpha.ml",
    deps_opam = ["ppxlib"]
)

ppx_module(
    name      = "_Ppx_beta",
    opts = ["-linkall"],
    struct    = "ppx_beta.ml",
    deps_opam = ["ppxlib"]
)

ppx_module(
    name      = "_Ppx_gamma",
    opts = ["-linkall"],
    struct    = "ppx_gamma.ml",
    deps_opam = ["ppxlib"]
)

################################################################
###########
ppx_module(
    name = "Runner",
    struct = ":ppxlib_runner.ml",
    deps_opam = ["ppxlib"]
)

########
genrule(
    name = "genrunner",
    outs = ["ppxlib_runner.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ]),
)
